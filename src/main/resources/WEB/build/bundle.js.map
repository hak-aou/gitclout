{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/chart.js/auto/auto.js","../../node_modules/dayjs/dayjs.min.js","../../node_modules/dayjs/plugin/relativeTime.js","../../node_modules/svelte-time/src/Time.svelte","../../node_modules/svelte-time/src/dayjs.js","../../src/Informations.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));","!function(r,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(r=\"undefined\"!=typeof globalThis?globalThis:r||self).dayjs_plugin_relativeTime=e()}(this,(function(){\"use strict\";return function(r,e,t){r=r||{};var n=e.prototype,o={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};function i(r,e,t,o){return n.fromToBase(r,e,t,o)}t.en.relativeTime=o,n.fromToBase=function(e,n,i,d,u){for(var f,a,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(f=d?t(e).diff(i,y.d,!0):i.diff(e,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(f));if(s=f>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(\"\"+p)),a=\"string\"==typeof v?v.replace(\"%d\",p):v(p,n,y.l,s);break}}if(n)return a;var M=s?l.future:l.past;return\"function\"==typeof M?M(a):M.replace(\"%s\",a)},n.to=function(r,e){return i(r,e,this,!0)},n.from=function(r,e){return i(r,e,this)};var d=function(r){return r.$u?t.utc():t()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)}}}));","<script>\n  // @ts-check\n\n  /**\n   * Original timestamp\n   * @type {import(\"dayjs\").ConfigType}\n   */\n  export let timestamp = new Date().toISOString();\n\n  /**\n   * Timestamp format for display.\n   * It's also used as a title in the `relative` mode\n   * @type {import(\"dayjs\").OptionType}\n   * @example \"YYYY-MM-DD\"\n   */\n  export let format = \"MMM DD, YYYY\";\n\n  /**\n   * Set to `true` to display the relative time from the provided `timestamp`.\n   * The value is displayed in a human-readable, relative format (e.g., \"4 days ago\", \"Last week\")\n   * @type {boolean}\n   */\n  export let relative = false;\n\n  /**\n   * Set to `true` to update the relative time at 60 second interval.\n   * Pass in a number (ms) to specify the interval length\n   * @type {boolean | number}\n   */\n  export let live = false;\n\n  /**\n   * Formatted timestamp.\n   * Result of invoking `dayjs().format()`\n   * @type {string}\n   */\n  export let formatted = \"\";\n\n  import { dayjs } from \"./dayjs\";\n  import { onMount } from \"svelte\";\n\n  /** @type {undefined | NodeJS.Timer} */\n  let interval = undefined;\n\n  const DEFAULT_INTERVAL = 60 * 1_000;\n\n  onMount(() => {\n    return () => clearInterval(interval);\n  });\n\n  $: if (relative && live !== false) {\n    interval = setInterval(() => {\n      formatted = dayjs(timestamp).from();\n    }, Math.abs(typeof live === \"number\" ? live : DEFAULT_INTERVAL));\n  }\n  $: formatted = relative ? dayjs(timestamp).from() : dayjs(timestamp).format(format);\n  $: title = relative ? dayjs(timestamp).format(format) : undefined;\n</script>\n\n<time {...$$restProps} {title} datetime={timestamp}>\n  {formatted}\n</time>\n","// @ts-check\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime.js\";\n\ndayjs.extend(relativeTime);\n\nexport { dayjs };\n","<script>\n    import { onMount } from 'svelte';\n    import Chart from 'chart.js/auto'\n    import Time, { svelteTime } from \"svelte-time\";\n\n    export let onBackFunction;\n    export let onNextFunction;\n\n    export let contributors;\n    export let tag;\n    export let repository;\n    export let tagsByRepositoryId;\n\n    let chartCanvas;\n    let myChart;\n\n    function createStackedBarChart() {\n        if (myChart) {\n            myChart.destroy();\n        }\n\n        const data = {\n              labels: contributors.map(c => c.mail),\n              datasets: [\n                  {\n                      label: 'Builds',\n                      backgroundColor: \"blue\",\n                      data: contributors.map(c => c.buildsLines),\n                  },\n                  {\n                      label: 'Codes',\n                      backgroundColor: \"red\",\n                      data: contributors.map(c => c.codesLines),\n                  },\n                  {\n                      label: 'Configs',\n                      backgroundColor: \"green\",\n                      data: contributors.map(c => c.configsLines),\n                  },\n                  {\n                      label: 'Docs',\n                      backgroundColor: \"yellow\",\n                      data: contributors.map(c => c.docsLines),\n                  },\n                  {\n                      label: 'Resources',\n                      backgroundColor: \"purple\",\n                      data: contributors.map(c => c.resourcesLines),\n                  }\n              ]\n          };\n\n        const config = {\n            type: 'bar',\n            data: data,\n            options: {\n                plugins: {\n                    title: {\n                        display: true,\n                        text: 'Stacked Bar Chart for contribution per type of files'\n                    },\n                },\n                scales: {\n                    x: {\n                        stacked: true,\n                    },\n                    y: {\n                        stacked: true\n                    }\n                }\n            }\n        };\n\n        let ctx = chartCanvas.getContext('2d');\n        myChart = new Chart(ctx, config);\n    }\n\n    let chartCanvasRadars = [];\n    let ctxRadars = [];\n    let myChartRadars = [];\n\n    function createDiv(i) {\n        const divParent = document.getElementById(\"allCanvas\");\n\n        const div = document.createElement(\"div\");\n        div.setAttribute(\"class\", \"divCanvas\");\n        div.setAttribute(\"id\", \"divMyChart\" + i);\n        divParent.appendChild(div);\n\n        const createdCanvas = document.createElement(\"canvas\");\n        createdCanvas.setAttribute(\"id\", \"myChart\" + i);\n        createdCanvas.style.height = \"250px\"; createdCanvas.style.width = \"250px\";\n        document.getElementById(\"divMyChart\" + i).appendChild(createdCanvas);\n\n        return createdCanvas;\n    }\n\n    function createRadarChart(i) {\n        const createdCanvas = createDiv(i);\n\n        const mapContributorLabels = [\n            { label: 'Builds',    line: contributors[i].buildsLines },\n            { label: 'Codes',     line: contributors[i].codesLines },\n            { label: 'Configs',   line: contributors[i].configsLines },\n            { label: 'Docs',      line: contributors[i].docsLines },\n            { label: 'Resources', line: contributors[i].resourcesLines }\n        ];\n\n        let sort = mapContributorLabels.sort(function (a, b) {\n            return b.line - a.line;\n        });\n\n        const data = {\n              labels: sort.map(l => l.label),\n              datasets: [\n                    {\n                        label: contributors[i].name + \" - \" + contributors[i].mail,\n                        data:  sort.map(l => l.line),\n                        fill: true,\n                        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                        borderColor: 'rgb(54, 162, 235)',\n                        pointBackgroundColor: 'rgb(54, 162, 235)',\n                        pointBorderColor: '#fff',\n                        pointHoverBackgroundColor: '#fff',\n                        pointHoverBorderColor: 'rgb(54, 162, 235)'\n                    }\n              ]\n          };\n\n        const config = {\n            type: 'radar',\n            data: data,\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                elements: {\n                    line: {\n                        borderWidth: 3\n                    }\n                }\n            }\n        };\n\n        let ctx = createdCanvas.getContext('2d');\n        myChartRadars[i] = new Chart(ctx, config);\n    }\n\n    $: if (contributors && contributors.length > 0) {\n        createStackedBarChart();\n\n        const divParent = document.getElementById(\"allCanvas\");\n        divParent.innerHTML = '';\n        myChartRadars = [];\n\n        for (let i = 0; i < contributors.length; i++) {\n            createRadarChart(i);\n        }\n    }\n</script>\n\n<main>\n    <h3>Informations of the tag : {tag.name}</h3>\n    <button type=button on:click={onBackFunction}>Previous page</button>\n\n    <!-- 1. Set of tags -->\n    <div class=\"name\">\n        <a href=\"{repository.url}\">{repository.url}</a>\n        <br><br><br>\n    </div>\n\n    <!-- 2. Contribution of all collaborators (using the stick view) -->\n    <section class=\"tags_section\">\n        <ol class=\"tags\">\n          <p>Tags : </p>\n            {#if tagsByRepositoryId[repository.repositoryId]}\n                {#each tagsByRepositoryId[repository.repositoryId] as tag}\n                    <li class=\"tag\"><button type=button on:click={() => onNextFunction(tag, repository) } >{tag.name}</button></li>\n                {/each}\n            {/if}\n        </ol>\n    </section>\n    <hr>\n\n    <!-- 3. Radar diagrams of each employee -->\n    <div id=\"barChart\">\n        <canvas bind:this={chartCanvas} id=\"myChart\"></canvas>\n    </div>\n    <div id=\"allCanvas\"></div>\n\n</main>\n\n\n<style>\n\tmain {\n\t\ttext-align: left;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n\n\n\tp, button{\n      display: inline-block;\n    }\n\n\n\n    ol li{\n      display: inline;\n    }\n\n    .tags {\n      margin: 0;\n      margin-top: -1em;\n      padding: 0;\n    }\n\n    ol {\n      overflow-x: auto;\n      white-space: nowrap;\n    }\n\n    ol li {\n      display: inline;\n    }\n\n    #allCanvas {\n        flex-wrap: wrap;\n        display: flex;\n        justify-content: center;\n    }\n\n\n    #barChart {\n       width: 60%;\n       height: 60%;\n       margin-right: auto;\n       margin-left: auto;\n       display: block;\n    }\n\n</style>","<script>\n\timport { onMount } from 'svelte';\n    import Informations from './Informations.svelte';\n    import Time, { svelteTime } from \"svelte-time\";\n\n    let url = '';\n    let repositories = [];\n    let tagsByRepositoryId = {}; // We have tags for each repository id\n    let allTagNotFinish = true;  // To know if we can show tags on screen\n\n    // For next page\n    let choosingTag = null;\n    let choosingRepository = null;\n    let contributorsByTagId = null;\n\n    let newRepositories = [];\n\n    async function getData(path) {\n        const res = await fetch(path, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json'\n            }\n        });\n\n        if (res.ok) {\n            return res.json();\n        }\n        return null;\n    }\n\n\n    async function sendUrl(url) {\n        if(repositories != null && repositories.length > 0 && repositories.map(r => r.url).includes(url)) {\n             alert(\"We already analyze the repository!\");\n             return;\n        }\n\n        console.log(\"Send url to the backend \" + url);\n\n        await fetch(\"http://localhost:8085/api/analyze/insertTags\", {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                url: url\n            })\n        });\n\n       await update();\n    }\n\n    async function getTagById(id) {\n        let tags = await getData(\"http://localhost:8085/api/tags/repository/\" + id);\n        tagsByRepositoryId[id] = tags;\n    }\n\n    async function update() {\n        allTagNotFinish = true;\n        newRepositories = await getData(\"http://localhost:8085/api/repositories/all\");\n\n        if(newRepositories && newRepositories.length > 0) {\n            for (const repository of newRepositories) {\n                await getTagById(repository.repositoryId);\n            }\n            repositories = newRepositories;\n            allTagNotFinish = false;\n        }\n    }\n\n    async function onNext(tag, repository) {\n        choosingTag = tag;\n        choosingRepository = repository;\n\n        let tagContributors = null;\n        try {\n            tagContributors = await getData(\"http://localhost:8085/api/contributors/tag/\" + tag.tagId);\n        } catch (error) {\n            console.log(\"Error to get contributors of the tag :\" + tag.name);\n        }\n\n        if (tagContributors == null) {\n             await analyzeTag(tag.tagId);\n             tagContributors = await getData(\"http://localhost:8085/api/contributors/tag/\" + tag.tagId);\n        }\n        contributorsByTagId = tagContributors;\n    }\n\n    function onBack() {\n        choosingTag = null;\n        choosingRepository = null;\n        contributorsByTagId = null;\n    }\n\n    async function analyzeTag(id) {\n        await fetch(\"http://localhost:8085/api/analyze/tag\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        tagId: id\n                    })\n                });\n    }\n\n    let promise = update();\n    $: repositories = newRepositories;\n</script>\n\n\n<main>\n\t<h2>GitClout</h2>\n\n    <!-- First page -->\n    {#if choosingTag}\n        <Informations  onNextFunction = {onNext}\n                       onBackFunction = {onBack}\n                       contributors = {contributorsByTagId}\n                       tag = {choosingTag}\n                       repository = {choosingRepository}\n                       tagsByRepositoryId = {tagsByRepositoryId} />\n    {:else}\n\n    <!-- Second page -->\n    <h5>Examples repository :</h5>\n    <div class=\"examples\">\n        <p>https://github.com/openjdk/jdk.git</p>\n        <p>https://gitlab.ow2.org/asm/asm.git</p>\n        <p>https://github.com/juspay/hyperswitch</p>\n        <p>https://github.com/Platane/snk</p>\n        <p>https://github.com/ilyagru/Space-Snake</p>\n    </div>\n\n    <form on:submit|preventDefault={() => sendUrl(url.trim())}>\n        <input type='url' bind:value={url} placeholder=\"https://...\" />\n\t    <button disabled={!url} type='submit'> 📤 </button>\n    </form>\n\n    <hr>\n\n    <div class=\"repositories\">\n        {#await promise}\n          <p>Chargement...</p>\n        {:then}\n            {#each repositories as repository}\n                <div class=\"repository\">\n                    <div class=\"name\">\n                        <a href=\"{repository.url}\">{repository.url}</a>\n                        <p>Repository added on :</p>\n                        <Time timestamp=\"{new Date(repository.date)}\" format=\"D/MM/YYYY\"/>\n                    </div>\n\n                    <section class=\"tags_section\">\n                        <ol class=\"tags\">\n                          <p>Tags : </p>\n                            {#if allTagNotFinish}\n                                  <p>Chargement...</p>\n                            {:else}\n                                {#if tagsByRepositoryId[repository.repositoryId]}\n                                    {#each tagsByRepositoryId[repository.repositoryId] as tag}\n                                        <li class=\"tag\"><button type=button on:click={() => onNext(tag, repository) } >{tag.name}</button></li>\n                                    {/each}\n                                {/if}\n                            {/if}\n                        </ol>\n                    </section>\n                    <hr>\n                </div>\n            {/each}\n           {:catch error}\n            <p>Nothing to show</p>\n        {/await}\n    </div>\n    {/if}\n</main>\n\n<style>\n\n\tmain {\n        max-width: 40rem;\n        margin: 0 15em;\n        padding: 1rem;\n\t}\n\n\th2 {\n        text-align: center;\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 50;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n\n\n\tp, button{\n      display: inline-block;\n    }\n\n    .examples p {\n      display: block;\n    }\n\n\n    ol li{\n      display: inline;\n    }\n\n    .tags {\n      margin: 0;\n      margin-top: -1em;\n      padding: 0;\n    }\n\n    ol {\n      overflow-x: auto;\n      white-space: nowrap;\n    }\n\n    ol li {\n      display: inline;\n    }\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","compute_rest_props","props","keys","rest","Set","has","contenteditable_truthy_values","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","always_set_through_set_attribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","indexOf","set_data","set_input_value","input","current_component","set_current_component","component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","flushidx","flush","saved_component","update","$$","e","pop","callback","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","m","new_on_destroy","on_mount","map","filter","on_destroy","destroy_component","filtered","targets","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","round","v","lim","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","hexString","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","isArray","hsl2rgb","hue","hueParse","str","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","modHSL","ratio","tmp","clone","proto","fromObject","functionParse","charAt","rgbParse","Color","constructor","len","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","klen","isValidKey","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","_arrayUnique","items","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","getScope$1","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","join","_resolveScriptable","isIndexable","arr","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","u","$","weekdays","months","ordinal","utcOffset","ms","_","$L","utc","$u","$x","$offset","$d","test","substring","UTC","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","isSame","isAfter","isBefore","$g","unix","valueOf","getTime","toDate","$locale","weekStart","daysInMonth","subtract","invalidDate","meridiem","monthsShort","weekdaysMin","weekdaysShort","getTimezoneOffset","toJSON","toISOString","toUTCString","extend","$i","isDayjs","en","Ls","module","exports","future","past","mm","hh","dd","MM","yy","fromToBase","relativeTime","thresholds","rounding","toNow","fromNow","attr_value","wholeText","set_data_contenteditable","time_data","levels","updates","to_null_out","accounted_for","$$scope","timestamp","relative","live","formatted","clearInterval","setInterval","$$invalidate","dayjs","repositoryId","t_value","li","button","t1_value","t5_value","url","create_if_block","a_href_value","main","h3","div0","br0","br1","br2","section","ol","hr","div1","div2","t1","t5","chartCanvas","myChart","onBackFunction","onNextFunction","contributors","tag","repository","tagsByRepositoryId","myChartRadars","createRadarChart","createdCanvas","divParent","div","createDiv","buildsLines","codesLines","configsLines","docsLines","resourcesLines","mail","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","createStackedBarChart","innerHTML","$$value","promise","token","child_ctx","needs_flush","blocks","mount","catch","hasCatch","pending","h5","form","preventDefault","each_blocks","t0_value","create_if_block_1","create_if_block_2","t0","async","getData","fetch","headers","Accept","json","repositories","allTagNotFinish","choosingTag","choosingRepository","contributorsByTagId","newRepositories","sendUrl","alert","log","getTagById","tags","onNext","tagContributors","tagId","analyzeTag","trim"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}